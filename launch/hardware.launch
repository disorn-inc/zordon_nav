<?xml version="1.0"?>
<launch>
<arg name="robot_name"/>
<!-- ZED -->
<include file="$(find roboga)/launch/zed_stereo.launch" >
	<arg name="robot_name" value="$(arg robot_name)" />
	<arg name="robotID" value="$(arg robot_name)" />
</include>
<!-- OpenCR -->
<node pkg="rosserial_python" type="serial_node.py" args="/dev/ttyACM0" name="serial_node" respawn="true"/>
<!-- LIDAR -->
<!--<node pkg="hls_lfcd_lds_driver" type="hlds_laser_publisher" name="Lidar2D_driver">
	<param name="port" value="/dev/ttyUSB0"/>
	<param name="frame_id" value="$(arg robot_name)_lidar"/>
	<remap from="scan" to="$(arg robot_name)/Lidar2D/LidarScan"/>
</node>-->
<node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
    <param name="serial_port"         type="string" value="/dev/serial/by-id/usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0001-if00-port0"/>
    <param name="serial_baudrate"     type="int"    value="115200"/>
    <param name="frame_id"            type="string" value="$(arg robot_name)_lidar"/>
    <param name="inverted"            type="bool"   value="false"/>
    <param name="angle_compensate"    type="bool"   value="true"/>
    <remap from="scan" to="$(arg robot_name)/Lidar2D/LidarScan"/>
</node>
<!-- TF -->
<!-- quartenion a partir de euler (0 0 -pi/2) [ 0, 0, -0.7071068, 0.7071068 ] --> 
<node pkg="tf" type="static_transform_publisher" name="lidar_link_broadcaster" args="0.03 0 0.16 0 0 -0.7071068 0.7071068 $(arg robot_name)_base $(arg robot_name)_lidar 100">

</node>
<node pkg="tf" type="static_transform_publisher" name="zed_link_broadcaster" args="0.093 0 0.15 0 0 0 1 $(arg robot_name)_base $(arg robot_name)_zed 100" >

</node>

<!-- <node name="tf_broadcaster" pkg="jacto" type="tf_publisher.py" respawn="false" output="screen" >
	<param name="robot_name" type="string" value="$(arg robot_name)" />  --> 
</launch>
